import {add} from '../src/index';

describe('足し算のテスト', () => {
  describe('add の引数の要素数が 30 個以下の場合、加算結果を返す', () => {
    describe('add の引数に数値を渡すと加算結果を返す', () => {
      test('[1] を渡すと 1 を返す', () => {
        expect(add([1])).toBe(1);
      });

      test('[1,2] を渡すと 3 を返す', () => {
        expect(add([1, 2])).toBe(3);
      });

      test('[1,2,...,30] を渡すと 465 を返す', () => {
        const oneToThirty = [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
        ];

        expect(add(oneToThirty)).toBe(465);
      });
    });

    describe('計算結果が 1000 を超える場合、合計ではなく「too big」と文字列が返す', () => {
      test('計算結果が 1001 の場合、文字列「too big」を返す', () => {
        expect(add([1, 1000])).toBe('too big');
      });
    });
  });

  describe('add の引数の要素数が 31 個以上の場合、例外を返す', () => {
    test('[1,2,...,31] を渡すと例外を返す', () => {
      const oneToThityOne = [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
      ];

      expect(() => add(oneToThityOne)).toThrow(Error);
    });
  });
});
